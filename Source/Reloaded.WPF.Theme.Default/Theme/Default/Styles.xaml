<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:utilities="clr-namespace:Reloaded.WPF.Utilities;assembly=Reloaded.WPF">

    <!-- For IntelliSense: Uncomment only when editing. -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Colours.xaml"/>
                <ResourceDictionary Source="Fonts.xaml"/>
                <ResourceDictionary Source="Settings.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>    

    <!-- Animations -->

    <!-- Fade background of an element -->
    <Storyboard x:Key="BackgroundFadeDarkerAnimation"
                Storyboard.TargetProperty="Background.Color">
        <ColorAnimation
            From="{StaticResource AccentColorLight}"
            To="{StaticResource AccentColor}"
            Duration="0:0:0.15"
            />
    </Storyboard>

    <Storyboard x:Key="BackgroundFadeLighterAnimation"
                Storyboard.TargetProperty="Background.Color">
        <ColorAnimation
            From="{StaticResource AccentColor}"
            To="{StaticResource AccentColorLight}"
            Duration="0:0:0.15"
        />
    </Storyboard>

    <!-- Base Style -->
    <Style TargetType="{x:Type Control}" x:Key="BaseStyle">
        <Setter Property="FontFamily" Value="{DynamicResource FontLight}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeRegular}" />
        <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}"/>
    </Style>

    <!-- Text Blocks -->
    <Style TargetType="{x:Type TextBlock}" x:Key="BaseTextBlockStyle">
        <Setter Property="FontFamily" Value="{DynamicResource FontLight}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeRegular}" />
        <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}"/>
    </Style>

    <!-- Styles not fully inheriting from Control -->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <!-- Cannot be StaticResource in combination with Animations
             As local BG colour will not be shared with global. 
        -->
        <Setter Property="Background" Value="{StaticResource AccentColorLightBrush}"/>
        <Setter Property="Padding" Value="15,10"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <!-- Background and border color -->
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <ContentPresenter 
                            x:Name="contentPresenter" 
                            ContentTemplate="{TemplateBinding ContentTemplate}" 
                            Content="{TemplateBinding Content}" 
                            ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                            Focusable="False" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" 
                            RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <!-- Mouseover Color Switch -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource BackgroundFadeDarkerAnimation}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource BackgroundFadeLighterAnimation}"/>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!-- Gray on Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource BorderColorBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource BaseStyle}" />
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}" />
    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}" />
    <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource BaseStyle}" />

    <!-- Page Header -->
    <Style x:Key="HeaderText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontFamily" Value="{DynamicResource FontThin}" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="HeaderAlignment" TargetType="{x:Type Viewbox}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Window Control Button -->
    <Style x:Key="WindowControlButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"></Setter>
        <Setter Property="Width" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}"></TextBlock>
                    </Border>

                    <!-- Mouseover Color Switch -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource BackgroundFadeDarkerAnimation}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource BackgroundFadeLighterAnimation}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dark Style Tooltips -->
    <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{DynamicResource TooltipCornerRadius}">
                        <TextBlock Text="{TemplateBinding Content}" 
                               Padding="{DynamicResource TooltipPaddingSize}"
                               FontSize="{TemplateBinding FontSize}"
                               FontFamily="{TemplateBinding FontFamily}"
                               Background="Transparent"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="FontSize" Value="{DynamicResource FontSizeTooltip}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontBold}"/>

        <Setter Property="Background" Value="{DynamicResource TooltipBackgroundColorBrush}"/>
    </Style>

</ResourceDictionary>