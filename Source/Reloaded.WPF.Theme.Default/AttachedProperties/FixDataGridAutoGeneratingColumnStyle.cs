using System.Collections.Specialized;
using System.Windows;
using System.Windows.Controls;
using Reloaded.WPF.MVVM;

namespace Reloaded.WPF.Theme.Default.AttachedProperties
{
    /// <summary>
    /// The <see cref="FixDataGridAutoGeneratingColumnStyle"/> is a simple dependency property that when
    /// applied to a DataGridView, ensures that the cells follow the actual theme style when the columns
    /// are autogenerated as opposed to the standard WPF style.
    /// </summary>
    public class FixDataGridAutoGeneratingColumnStyle : AttachedPropertyBase<FixDataGridAutoGeneratingColumnStyle, bool>
    {
        private const string TextBoxStyle = "DataGridTextStyle";
        private const string CheckBoxStyle = "DataGridCheckBoxStyle";
        private const string ComboBoxStyle = "DataGridComboBoxStyle";

        /// <inheritdoc />
        public override void OnValueChanged(DependencyObject sender, DependencyPropertyChangedEventArgs e)
        {
            bool newValue = GetValue(sender);

            if (sender is DataGrid grid)
            {
                if (newValue == false)
                {
                    grid.Columns.CollectionChanged -= ColumnsOnCollectionChanged;
                }
                else
                {
                    grid.Columns.CollectionChanged += ColumnsOnCollectionChanged;
                }

                ColumnsOnCollectionChanged(grid, null);
            }
        }

        private void ColumnsOnCollectionChanged(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (sender is DataGrid grid)
            {
                // Get the window which hosts the grid (and default/reloaded theme will be accessible from).
                var window = Window.GetWindow(grid);

                foreach (var column in grid.Columns)
                {
                    if (column is DataGridCheckBoxColumn checkboxColumn)
                    {
                        if (TryGetResource(CheckBoxStyle, window, out var newStyle))
                        {
                            checkboxColumn.ElementStyle = (Style)newStyle;
                            checkboxColumn.EditingElementStyle = (Style)newStyle;
                        }
                    }

                    if (column is DataGridTextColumn textColumn)
                    {
                        if (TryGetResource(TextBoxStyle, window, out var editStyle))
                            textColumn.EditingElementStyle = (Style)editStyle;

                        if (TryGetResource(typeof(TextBlock), window, out var elementStyle))
                            textColumn.ElementStyle = (Style)elementStyle;
                    }

                    if (column is DataGridComboBoxColumn comboBoxColumn)
                    {
                        if (TryGetResource(ComboBoxStyle, window, out var editStyle))
                            comboBoxColumn.EditingElementStyle = (Style)editStyle;
                    }
                }
            }
        }

        private bool TryGetResource(object resourceKey, Window window, out Style newStyle)
        {
            if (window != null)
            {
                newStyle = window.TryFindResource(resourceKey) as Style;
                if (newStyle != null)
                    return true;
            }

            newStyle = Application.Current.TryFindResource(resourceKey) as Style;
            if (newStyle != null)
                return true;

            return false;
        }
    }
}
